# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0emessages.proto\x12\rprotos.no_std\"J\n\tRailState\x12*\n\x07railIdx\x18\x01 \x01(\x0e\x32\x19.protos.no_std.PowerRails\x12\x11\n\trailState\x18\x02 \x01(\x08\"s\n\nEpsCommand\x12%\n\x03\x63id\x18\x01 \x01(\x0e\x32\x18.protos.no_std.CommandID\x12\x30\n\trailState\x18\x02 \x01(\x0b\x32\x18.protos.no_std.RailStateH\x00\x88\x01\x01\x42\x0c\n\n_railState\"4\n\x0e\x42\x61tteryVoltage\x12\x10\n\x08\x62\x61ttery1\x18\x01 \x01(\r\x12\x10\n\x08\x62\x61ttery2\x18\x02 \x01(\r\"h\n\x0cSolarVoltage\x12\r\n\x05side1\x18\x01 \x01(\r\x12\r\n\x05side2\x18\x02 \x01(\r\x12\r\n\x05side3\x18\x03 \x01(\r\x12\r\n\x05side4\x18\x04 \x01(\r\x12\r\n\x05side5\x18\x05 \x01(\r\x12\r\n\x05side6\x18\x06 \x01(\r\"\x8c\x01\n\x14\x42\x61tteryManagerStates\x12\x39\n\rbattery1State\x18\x01 \x01(\x0e\x32\".protos.no_std.BatteryManagerState\x12\x39\n\rbattery2State\x18\x02 \x01(\x0e\x32\".protos.no_std.BatteryManagerState\"\xe1\x02\n\x0b\x45psResponse\x12%\n\x03\x63id\x18\x01 \x01(\x0e\x32\x18.protos.no_std.CommandID\x12-\n\trailState\x18\x02 \x01(\x0b\x32\x18.protos.no_std.RailStateH\x00\x12\x37\n\x0e\x62\x61tteryVoltage\x18\x03 \x01(\x0b\x32\x1d.protos.no_std.BatteryVoltageH\x00\x12\x33\n\x0csolarVoltage\x18\x04 \x01(\x0b\x32\x1b.protos.no_std.SolarVoltageH\x00\x12\x41\n\x13\x62\x61tteryVoltageState\x18\x05 \x01(\x0e\x32\".protos.no_std.BatteryVoltageStateH\x00\x12\x43\n\x14\x62\x61tteryManagerStates\x18\x06 \x01(\x0b\x32#.protos.no_std.BatteryManagerStatesH\x00\x42\x06\n\x04resp\"\xae\x02\n\x07RailSOH\x12\r\n\x05rail1\x18\x01 \x01(\x08\x12\r\n\x05rail2\x18\x02 \x01(\x08\x12\r\n\x05rail3\x18\x03 \x01(\x08\x12\r\n\x05rail4\x18\x04 \x01(\x08\x12\r\n\x05rail5\x18\x05 \x01(\x08\x12\r\n\x05rail6\x18\x06 \x01(\x08\x12\r\n\x05rail7\x18\x07 \x01(\x08\x12\r\n\x05rail8\x18\x08 \x01(\x08\x12\r\n\x05rail9\x18\t \x01(\x08\x12\x0e\n\x06rail10\x18\n \x01(\x08\x12\x0e\n\x06rail11\x18\x0b \x01(\x08\x12\x0e\n\x06rail12\x18\x0c \x01(\x08\x12\x0e\n\x06rail13\x18\r \x01(\x08\x12\x0e\n\x06rail14\x18\x0e \x01(\x08\x12\x0e\n\x06rail15\x18\x0f \x01(\x08\x12\x0e\n\x06rail16\x18\x10 \x01(\x08\x12\r\n\x05hpwr1\x18\x11 \x01(\x08\x12\r\n\x05hpwr2\x18\x12 \x01(\x08\x12\x0e\n\x06hpwrEn\x18\x13 \x01(\x08\"\xa1\x02\n\x08RadioSOH\x12\x35\n\x0e\x62\x61tteryVoltage\x18\x01 \x01(\x0b\x32\x1d.protos.no_std.BatteryVoltage\x12\x31\n\x0csolarVoltage\x18\x02 \x01(\x0b\x32\x1b.protos.no_std.SolarVoltage\x12?\n\x13\x62\x61tteryVoltageState\x18\x03 \x01(\x0e\x32\".protos.no_std.BatteryVoltageState\x12\x41\n\x14\x62\x61tteryManagerStates\x18\x04 \x01(\x0b\x32#.protos.no_std.BatteryManagerStates\x12\'\n\x07railSoh\x18\x05 \x01(\x0b\x32\x16.protos.no_std.RailSOH\"l\n\x0eRadioTelemetry\x12\'\n\x03tid\x18\x01 \x01(\x0e\x32\x1a.protos.no_std.TelemetryID\x12&\n\x03soh\x18\x02 \x01(\x0b\x32\x17.protos.no_std.RadioSOHH\x00\x42\t\n\x07message*\x9d\x01\n\tCommandID\x12\x15\n\x11SetPowerRailState\x10\x00\x12\x15\n\x11GetPowerRailState\x10\x01\x12\x15\n\x11GetBatteryVoltage\x10\x02\x12\x13\n\x0fGetSolarVoltage\x10\x03\x12\x1a\n\x16GetBatteryVoltageState\x10\x04\x12\x1a\n\x16GetBatteryManagerState\x10\x05*\xe5\x01\n\nPowerRails\x12\t\n\x05Rail1\x10\x00\x12\t\n\x05Rail2\x10\x01\x12\t\n\x05Rail3\x10\x02\x12\t\n\x05Rail4\x10\x03\x12\t\n\x05Rail5\x10\x04\x12\t\n\x05Rail6\x10\x05\x12\t\n\x05Rail7\x10\x06\x12\t\n\x05Rail8\x10\x07\x12\t\n\x05Rail9\x10\x08\x12\n\n\x06Rail10\x10\t\x12\n\n\x06Rail11\x10\n\x12\n\n\x06Rail12\x10\x0b\x12\n\n\x06Rail13\x10\x0c\x12\n\n\x06Rail14\x10\r\x12\n\n\x06Rail15\x10\x0e\x12\n\n\x06Rail16\x10\x0f\x12\t\n\x05Hpwr1\x10\x10\x12\t\n\x05Hpwr2\x10\x11\x12\n\n\x06HpwrEn\x10\x12*R\n\x13\x42\x61tteryVoltageState\x12\x0c\n\x08\x42othHigh\x10\x00\x12\x0f\n\x0b\x42\x31HighB2Low\x10\x01\x12\x0f\n\x0b\x42\x31LowB2High\x10\x02\x12\x0b\n\x07\x42othLow\x10\x03*A\n\x13\x42\x61tteryManagerState\x12\r\n\tSuspended\x10\x00\x12\x0c\n\x08LowPower\x10\x01\x12\r\n\tHighPower\x10\x02*\x16\n\x0bTelemetryID\x12\x07\n\x03SOH\x10\x00\x62\x06proto3')

_COMMANDID = DESCRIPTOR.enum_types_by_name['CommandID']
CommandID = enum_type_wrapper.EnumTypeWrapper(_COMMANDID)
_POWERRAILS = DESCRIPTOR.enum_types_by_name['PowerRails']
PowerRails = enum_type_wrapper.EnumTypeWrapper(_POWERRAILS)
_BATTERYVOLTAGESTATE = DESCRIPTOR.enum_types_by_name['BatteryVoltageState']
BatteryVoltageState = enum_type_wrapper.EnumTypeWrapper(_BATTERYVOLTAGESTATE)
_BATTERYMANAGERSTATE = DESCRIPTOR.enum_types_by_name['BatteryManagerState']
BatteryManagerState = enum_type_wrapper.EnumTypeWrapper(_BATTERYMANAGERSTATE)
_TELEMETRYID = DESCRIPTOR.enum_types_by_name['TelemetryID']
TelemetryID = enum_type_wrapper.EnumTypeWrapper(_TELEMETRYID)
SetPowerRailState = 0
GetPowerRailState = 1
GetBatteryVoltage = 2
GetSolarVoltage = 3
GetBatteryVoltageState = 4
GetBatteryManagerState = 5
Rail1 = 0
Rail2 = 1
Rail3 = 2
Rail4 = 3
Rail5 = 4
Rail6 = 5
Rail7 = 6
Rail8 = 7
Rail9 = 8
Rail10 = 9
Rail11 = 10
Rail12 = 11
Rail13 = 12
Rail14 = 13
Rail15 = 14
Rail16 = 15
Hpwr1 = 16
Hpwr2 = 17
HpwrEn = 18
BothHigh = 0
B1HighB2Low = 1
B1LowB2High = 2
BothLow = 3
Suspended = 0
LowPower = 1
HighPower = 2
SOH = 0


_RAILSTATE = DESCRIPTOR.message_types_by_name['RailState']
_EPSCOMMAND = DESCRIPTOR.message_types_by_name['EpsCommand']
_BATTERYVOLTAGE = DESCRIPTOR.message_types_by_name['BatteryVoltage']
_SOLARVOLTAGE = DESCRIPTOR.message_types_by_name['SolarVoltage']
_BATTERYMANAGERSTATES = DESCRIPTOR.message_types_by_name['BatteryManagerStates']
_EPSRESPONSE = DESCRIPTOR.message_types_by_name['EpsResponse']
_RAILSOH = DESCRIPTOR.message_types_by_name['RailSOH']
_RADIOSOH = DESCRIPTOR.message_types_by_name['RadioSOH']
_RADIOTELEMETRY = DESCRIPTOR.message_types_by_name['RadioTelemetry']
RailState = _reflection.GeneratedProtocolMessageType('RailState', (_message.Message,), {
  'DESCRIPTOR' : _RAILSTATE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.RailState)
  })
_sym_db.RegisterMessage(RailState)

EpsCommand = _reflection.GeneratedProtocolMessageType('EpsCommand', (_message.Message,), {
  'DESCRIPTOR' : _EPSCOMMAND,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.EpsCommand)
  })
_sym_db.RegisterMessage(EpsCommand)

BatteryVoltage = _reflection.GeneratedProtocolMessageType('BatteryVoltage', (_message.Message,), {
  'DESCRIPTOR' : _BATTERYVOLTAGE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.BatteryVoltage)
  })
_sym_db.RegisterMessage(BatteryVoltage)

SolarVoltage = _reflection.GeneratedProtocolMessageType('SolarVoltage', (_message.Message,), {
  'DESCRIPTOR' : _SOLARVOLTAGE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.SolarVoltage)
  })
_sym_db.RegisterMessage(SolarVoltage)

BatteryManagerStates = _reflection.GeneratedProtocolMessageType('BatteryManagerStates', (_message.Message,), {
  'DESCRIPTOR' : _BATTERYMANAGERSTATES,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.BatteryManagerStates)
  })
_sym_db.RegisterMessage(BatteryManagerStates)

EpsResponse = _reflection.GeneratedProtocolMessageType('EpsResponse', (_message.Message,), {
  'DESCRIPTOR' : _EPSRESPONSE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.EpsResponse)
  })
_sym_db.RegisterMessage(EpsResponse)

RailSOH = _reflection.GeneratedProtocolMessageType('RailSOH', (_message.Message,), {
  'DESCRIPTOR' : _RAILSOH,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.RailSOH)
  })
_sym_db.RegisterMessage(RailSOH)

RadioSOH = _reflection.GeneratedProtocolMessageType('RadioSOH', (_message.Message,), {
  'DESCRIPTOR' : _RADIOSOH,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.RadioSOH)
  })
_sym_db.RegisterMessage(RadioSOH)

RadioTelemetry = _reflection.GeneratedProtocolMessageType('RadioTelemetry', (_message.Message,), {
  'DESCRIPTOR' : _RADIOTELEMETRY,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:protos.no_std.RadioTelemetry)
  })
_sym_db.RegisterMessage(RadioTelemetry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _COMMANDID._serialized_start=1593
  _COMMANDID._serialized_end=1750
  _POWERRAILS._serialized_start=1753
  _POWERRAILS._serialized_end=1982
  _BATTERYVOLTAGESTATE._serialized_start=1984
  _BATTERYVOLTAGESTATE._serialized_end=2066
  _BATTERYMANAGERSTATE._serialized_start=2068
  _BATTERYMANAGERSTATE._serialized_end=2133
  _TELEMETRYID._serialized_start=2135
  _TELEMETRYID._serialized_end=2157
  _RAILSTATE._serialized_start=33
  _RAILSTATE._serialized_end=107
  _EPSCOMMAND._serialized_start=109
  _EPSCOMMAND._serialized_end=224
  _BATTERYVOLTAGE._serialized_start=226
  _BATTERYVOLTAGE._serialized_end=278
  _SOLARVOLTAGE._serialized_start=280
  _SOLARVOLTAGE._serialized_end=384
  _BATTERYMANAGERSTATES._serialized_start=387
  _BATTERYMANAGERSTATES._serialized_end=527
  _EPSRESPONSE._serialized_start=530
  _EPSRESPONSE._serialized_end=883
  _RAILSOH._serialized_start=886
  _RAILSOH._serialized_end=1188
  _RADIOSOH._serialized_start=1191
  _RADIOSOH._serialized_end=1480
  _RADIOTELEMETRY._serialized_start=1482
  _RADIOTELEMETRY._serialized_end=1590
# @@protoc_insertion_point(module_scope)
